name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job 1: Build and Test
  build-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: 🔄 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: npm ci
      
    - name: 🔍 Lint Code
      run: |
        # Install ESLint if not present
        if ! npm list eslint >/dev/null 2>&1; then
          npm install --save-dev eslint
        fi
        # Run linting (will pass if no .eslintrc exists)
        npx eslint src/ --ext .js || echo "ESLint not configured, skipping..."
      continue-on-error: true
        
    - name: 🧪 Run Tests (MANDATORY)
      run: |
        if [ -d "tests" ]; then
          cd tests
          if [ -f "package.json" ]; then
            npm ci
            npm test
          else
            echo "❌ No package.json found in tests directory"
            exit 1
          fi
        else
          echo "❌ No tests directory found - tests are required for deployment"
          exit 1
        fi
        
    - name: 🏗️ Build for Production
      run: npm run build
      
    - name: ✅ Validate Build Artifacts
      run: |
        chmod +x scripts/validate-build.sh
        ./scripts/validate-build.sh
      
    - name: 📊 Generate Test Coverage Report
      run: |
        if [ -d "tests" ]; then
          cd tests
          if [ -f "package.json" ]; then
            npm run test:coverage || echo "Coverage not configured"
          fi
        fi
      continue-on-error: true
        
    - name: 📤 Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files-${{ matrix.node-version }}
        path: dist/
        retention-days: 1
        
    - name: 📤 Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.node-version }}
        path: |
          tests/coverage/
          tests/screenshots/
        retention-days: 7

  # Job 2: Security and Quality Checks
  security-checks:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: 🔄 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: npm ci
      
    - name: 🔒 Run Security Audit
      run: npm audit --audit-level moderate
      continue-on-error: true
      
    - name: 🔍 Check for Outdated Dependencies
      run: npm outdated || true
      
    - name: 📋 Check Package Vulnerabilities
      run: |
        npx audit-ci --config .audit-ci.json || echo "audit-ci not configured"

  # Job 3: Deploy to GitHub Pages (ONLY if tests pass)
  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-test, security-checks]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: 🔄 Checkout Repository
      uses: actions/checkout@v4
        - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: npm ci
      
    - name: 🏗️ Build for Production
      run: npm run build
        
    - name: 📁 Copy Static Assets
      run: |
        # Copy any additional static files that webpack might not handle
        cp -r src/assets dist/ 2>/dev/null || echo "No assets directory found"
        cp src/favicon.svg dist/ 2>/dev/null || echo "No favicon found"
        # Add .nojekyll to prevent GitHub Pages from processing with Jekyll
        touch dist/.nojekyll
        
    - name: 🔧 Setup GitHub Pages
      uses: actions/configure-pages@v4
      
    - name: 📤 Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./dist
        
    - name: 🚀 Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # Job 4: Performance Testing (runs after deployment)
  performance-test:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: 🔄 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: 📦 Install Lighthouse CI
      run: npm install -g @lhci/cli@0.12.x
      
    - name: 🏃‍♂️ Run Lighthouse CI
      run: |
        lhci autorun || echo "Lighthouse CI failed - site might still be deploying"
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Job 5: Notify on Success/Failure
  notify:
    runs-on: ubuntu-latest
    needs: [build-and-test, security-checks, deploy, performance-test]
    if: always()
    
    steps:
    - name: 📢 Deployment Success Notification
      if: needs.deploy.result == 'success'
      run: |
        echo "🎉 Deployment successful!"
        echo "🌐 Website is live at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
        
    - name: ❌ Deployment Failure Notification
      if: needs.deploy.result == 'failure'
      run: |
        echo "❌ Deployment failed!"
        echo "Please check the logs above for details."
        
    - name: ⚠️ Test Failure Notification
      if: needs.build-and-test.result == 'failure'
      run: |
        echo "❌ Tests failed! Deployment was blocked."
        echo "Please fix the failing tests before deployment can proceed."
